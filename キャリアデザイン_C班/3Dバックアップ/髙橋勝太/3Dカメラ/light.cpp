//-----------------------------------------------------------------
//
// プレイヤーの処理 (player.cpp)
// Author:shouta takahashi
//
//-----------------------------------------------------------------

//------------------------
//インクルードファイル
//------------------------
#include "light.h"

//-----------------------------------------------------------------------------
//グローバル変数
//-----------------------------------------------------------------------------
D3DLIGHT9 g_light[3];		//ライト情報

//-----------------------------------------------------------------------------
// ポリゴンの初期化処理
//-----------------------------------------------------------------------------
void Initlight(void)
{
	//ローカル
	LPDIRECT3DDEVICE9 pDevice;	//デバイスへのポインタ

	D3DXVECTOR3 vecDir;			//設定用方向ベクトル

	pDevice = GetDevice();

	for (int nCntShadow = 0; nCntShadow < MAX_LIGHT; nCntShadow++)
	{
		//ライトをクリアにする
		ZeroMemory(&g_light[nCntShadow], sizeof(D3DLIGHT9));

		//ライトの種類
		g_light[nCntShadow].Type = D3DLIGHT_DIRECTIONAL;

		//ライトの拡散光の設定
		g_light[nCntShadow].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

		//ライトの方向を設定
		vecDir = D3DXVECTOR3(0.2f, -0.8f, -0.4f);
		D3DXVec3Normalize(&vecDir, &vecDir); //正規化
		g_light[nCntShadow].Direction = vecDir;

		//ライトを設定する
		pDevice->SetLight(0, &g_light[nCntShadow]);


	}

	//ライトを有効にする
	pDevice->LightEnable(0, TRUE);

	//ライトを有効にする
	pDevice->LightEnable(1, TRUE);

	//ライトを有効にする
	pDevice->LightEnable(3, TRUE);
}

//-----------------------------------------------------------------------------
// ポリゴンの終了処理
//-----------------------------------------------------------------------------
void Uninitlight(void)
{
}

//-----------------------------------------------------------------------------
// ポリゴンの更新処理
//-----------------------------------------------------------------------------
void Updatelight(void)
{
}

